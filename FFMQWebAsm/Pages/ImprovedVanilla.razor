@page "/ImprovedVanilla"
@using Microsoft.AspNetCore.Components.Forms
@using System.IO;
@using System.IO.Compression;
@using System;
@using System.Web
@using System.Net.Http
@using System.Text;
@using FFMQLib;
@using Microsoft.JSInterop;
@using Microsoft.JSInterop.WebAssembly;
@using Blazorise.Components;
@using RomUtilities;
@using Microsoft.AspNetCore.Components
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@inject HttpClient Http


<style>
    body {

        background: linear-gradient(rgba(27,42,81,1),rgba(85,109,171,1)) no-repeat center fixed;
        background-size: cover;
    }
</style>

@if (loadingDone)
{
	<div class="@("center-logo")">
		<img style="max-width:100%; height:140px; position: relative; margin-top:-40px" alt="FFMQ Randomizer Logo" src="logo/FFMQRLogo-Final-Web.svg" />
		<h1 class="text-secondary" style="font-size: 1em; text-align: right">@("v" + (@betaStatus ? @FFMQLib.Metadata.Version + "-beta" : @FFMQLib.Metadata.Release))</h1>
	</div>

	<div><br /><br /></div>

<Container class="sectionBox">
    <div class="box-title text-secondary">Improved Vanilla</div>
    <Container Class="infoBox">
            <div class="text-secondary">Experience the original game with the randomizer's quality of life improvements.</div>
            <ul class="text-secondary">
                <li>200% XP gains</li>
                <li>Half as many enemies</li>
                <li>Half as many battlefield fights</li>
                <li>Double walking speed</li>
                <li>Bug Fixes (Optional)</li>
                <li>MSU-1 Support</li>
            </ul>
    </Container>
</Container>

<div><br /></div>
}
<Container class="sectionBox" Style=@(loadingDone ? "" : "display: none")>
    <div class="box-title text-secondary">
        Generation       
    </div> 

    <Container Class="flagBox">
        <Container Class="flagColumn">
            <ImproveButton EnableBugFixes="enableBugFixes" Preferences="preferences" Beta="@GetBetaStatus()" IsLoadFromMemoryDone="LoadFromMemoryDone" />
        </Container>
        <Container Class="flagColumn">
            <BoolFlag UsePreset=false Name="Enable Bug Fixes" @bind-Value="enableBugFixes" Tooltip="Apply the randomizer's bug fixes: no Cure overflow for the Dark King, fixed Companion Resistances, fixed Vendor Buy Zero Bug and fixed Life spell killing non-undead enemies." />
        </Container>
    </Container>
</Container>

@if (loadingDone)
{
	<div><br /></div>

	<PreferencesSection preferences="@preferences" />

	<div><br /><br /><br /><br /></div>
	<div><br /><br /><br /></div>
	<LogoCredit />
}

@code{
    private bool loadingDone = false;
    private bool betaStatus = false;
    private bool enableBugFixes = true;

    private Flags flags = new();
    private Preferences preferences = new();
    private ApConfigs apconfigs = new();
    private Blob seed = new byte[4];

    private bool GetBetaStatus()
    {
        var uri = new Uri(NavigationManager.Uri);

        string fullUrl = uri.OriginalString;
        int index = fullUrl.IndexOf("dev");
        if (index >= 0)
        {
            return true;
        }

        return false;
    }

    protected override void OnInitialized()
    {
        betaStatus = GetBetaStatus();
    }

    void LoadFromMemoryDone(bool result)
    {
        loadingDone = true;
        JS.InvokeVoidAsync("hideLoadingBox");
        StateHasChanged();
    }

}
